SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
CREATE EXTENSION IF NOT EXISTS "pg_net" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";
COMMENT ON SCHEMA "public" IS 'standard public schema';
CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";
CREATE TYPE "public"."game_status" AS ENUM (
    'new',
    'turn1_p1',
    'turn1_p2',
    'turn2_p1',
    'turn2_p2',
    'turn3_p1',
    'turn3_p2',
    'turn4_p1',
    'turn4_p2',
    'turn5_p1',
    'turn5_p2',
    'ended'
);
ALTER TYPE "public"."game_status" OWNER TO "postgres";
CREATE OR REPLACE FUNCTION "public"."duplicate_army_into_games_armies_for_player_one"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$begin
    insert into
      game_armies (units, name, total_points, codex, user_id)
    select
      units,
      name,
      total_points,
      codex,
      user_id
    from
      armies
    where
      id = NEW.army_one
    returning id into NEW.army_one;

  return NEW;
end;$$;
ALTER FUNCTION "public"."duplicate_army_into_games_armies_for_player_one"() OWNER TO "postgres";
CREATE OR REPLACE FUNCTION "public"."duplicate_army_into_games_armies_for_player_two"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$begin
  if NEW.status = 'turn1_p1' and NEW.player_two is null then
    insert into
      game_armies (units, name, total_points, codex, user_id)
    select
      units,
      name,
      total_points,
      codex,
      user_id
    from
      armies
    where
      id = NEW.army_two
    returning id into NEW.army_two;

    NEW.player_two = auth.uid();
  end if;

  return NEW;
end;$$;
ALTER FUNCTION "public"."duplicate_army_into_games_armies_for_player_two"() OWNER TO "postgres";
CREATE OR REPLACE FUNCTION "public"."update_game_time"() RETURNS "trigger"
    LANGUAGE "plpgsql"
    AS $$begin
  NEW.updated_at = now();

  return NEW;
end;$$;
ALTER FUNCTION "public"."update_game_time"() OWNER TO "postgres";
SET default_tablespace = '';
SET default_table_access_method = "heap";
CREATE TABLE IF NOT EXISTS "public"."codexes" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL
);
ALTER TABLE "public"."codexes" OWNER TO "postgres";
ALTER TABLE "public"."codexes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Index_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."armies" (
    "id" bigint NOT NULL,
    "units" "json" NOT NULL,
    "name" "text" NOT NULL,
    "total_points" bigint NOT NULL,
    "codex" bigint NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL
);
ALTER TABLE "public"."armies" OWNER TO "postgres";
ALTER TABLE "public"."armies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."army_lists_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."game_armies" (
    "id" bigint NOT NULL,
    "units" "json" NOT NULL,
    "name" "text" NOT NULL,
    "total_points" bigint NOT NULL,
    "codex" bigint NOT NULL,
    "user_id" "uuid" NOT NULL
);
ALTER TABLE "public"."game_armies" OWNER TO "postgres";
ALTER TABLE "public"."game_armies" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."game_armies_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."games" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "status" "public"."game_status" DEFAULT 'new'::"public"."game_status" NOT NULL,
    "player_one" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "army_one" bigint NOT NULL,
    "score_one" integer DEFAULT 0 NOT NULL,
    "player_two" "uuid",
    "army_two" bigint,
    "score_two" integer DEFAULT 0 NOT NULL,
    "cp_one" smallint DEFAULT '0'::smallint NOT NULL,
    "cp_two" smallint DEFAULT '0'::smallint,
    "updated_at" timestamp with time zone
);
ALTER TABLE "public"."games" OWNER TO "postgres";
ALTER TABLE "public"."games" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."games_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."unit_tiers" (
    "id" bigint NOT NULL,
    "unit" bigint NOT NULL,
    "points" bigint NOT NULL,
    "models" integer DEFAULT 0 NOT NULL
);
ALTER TABLE "public"."unit_tiers" OWNER TO "postgres";
ALTER TABLE "public"."unit_tiers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."tiers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."units" (
    "id" bigint NOT NULL,
    "codex" bigint NOT NULL,
    "name" "text" NOT NULL
);
ALTER TABLE "public"."units" OWNER TO "postgres";
ALTER TABLE "public"."units" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."units_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);
CREATE TABLE IF NOT EXISTS "public"."users" (
    "id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "name" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL
);
ALTER TABLE "public"."users" OWNER TO "postgres";
ALTER TABLE ONLY "public"."codexes"
    ADD CONSTRAINT "Index_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."armies"
    ADD CONSTRAINT "army_lists_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."game_armies"
    ADD CONSTRAINT "game_armies_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."unit_tiers"
    ADD CONSTRAINT "tiers_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."units"
    ADD CONSTRAINT "units_pkey" PRIMARY KEY ("id");
ALTER TABLE ONLY "public"."users"
    ADD CONSTRAINT "users_pkey" PRIMARY KEY ("id");
CREATE OR REPLACE TRIGGER "set_up_army_one_for_game" BEFORE INSERT ON "public"."games" FOR EACH ROW EXECUTE FUNCTION "public"."duplicate_army_into_games_armies_for_player_one"();
CREATE OR REPLACE TRIGGER "set_up_army_two_for_game" BEFORE UPDATE ON "public"."games" FOR EACH ROW EXECUTE FUNCTION "public"."duplicate_army_into_games_armies_for_player_two"();
CREATE OR REPLACE TRIGGER "update_game_time" BEFORE UPDATE ON "public"."games" FOR EACH ROW EXECUTE FUNCTION "public"."update_game_time"();
ALTER TABLE ONLY "public"."armies"
    ADD CONSTRAINT "armies_codex_fkey" FOREIGN KEY ("codex") REFERENCES "public"."codexes"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY "public"."game_armies"
    ADD CONSTRAINT "game_armies_codex_fkey" FOREIGN KEY ("codex") REFERENCES "public"."codexes"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_army_one_fkey" FOREIGN KEY ("army_one") REFERENCES "public"."game_armies"("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_army_two_fkey" FOREIGN KEY ("army_two") REFERENCES "public"."game_armies"("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_player_one_fkey" FOREIGN KEY ("player_one") REFERENCES "public"."users"("id");
ALTER TABLE ONLY "public"."games"
    ADD CONSTRAINT "games_player_two_fkey" FOREIGN KEY ("player_two") REFERENCES "public"."users"("id");
ALTER TABLE ONLY "public"."unit_tiers"
    ADD CONSTRAINT "unit_tiers_unit_fkey" FOREIGN KEY ("unit") REFERENCES "public"."units"("id") ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE ONLY "public"."units"
    ADD CONSTRAINT "units_codex_fkey" FOREIGN KEY ("codex") REFERENCES "public"."codexes"("id") ON UPDATE CASCADE ON DELETE CASCADE;
CREATE POLICY "ALL" ON "public"."game_armies" TO "authenticated" USING (true) WITH CHECK (true);
CREATE POLICY "ALL" ON "public"."games" TO "authenticated" USING (true);
CREATE POLICY "ALL" ON "public"."users" TO "authenticated" USING (true) WITH CHECK (true);
CREATE POLICY "all" ON "public"."armies" TO "authenticated" USING (true) WITH CHECK (true);
CREATE POLICY "all" ON "public"."codexes" TO "authenticated" USING (true) WITH CHECK (true);
CREATE POLICY "all" ON "public"."unit_tiers" TO "authenticated" USING (true) WITH CHECK (true);
CREATE POLICY "all" ON "public"."units" TO "authenticated" USING (true) WITH CHECK (true);
ALTER TABLE "public"."armies" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."codexes" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."game_armies" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."games" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."unit_tiers" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."units" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."users" ENABLE ROW LEVEL SECURITY;
ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";
ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."games";
REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";
GRANT ALL ON FUNCTION "public"."duplicate_army_into_games_armies_for_player_one"() TO "anon";
GRANT ALL ON FUNCTION "public"."duplicate_army_into_games_armies_for_player_one"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."duplicate_army_into_games_armies_for_player_one"() TO "service_role";
GRANT ALL ON FUNCTION "public"."duplicate_army_into_games_armies_for_player_two"() TO "anon";
GRANT ALL ON FUNCTION "public"."duplicate_army_into_games_armies_for_player_two"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."duplicate_army_into_games_armies_for_player_two"() TO "service_role";
GRANT ALL ON FUNCTION "public"."update_game_time"() TO "anon";
GRANT ALL ON FUNCTION "public"."update_game_time"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."update_game_time"() TO "service_role";
GRANT ALL ON TABLE "public"."codexes" TO "anon";
GRANT ALL ON TABLE "public"."codexes" TO "authenticated";
GRANT ALL ON TABLE "public"."codexes" TO "service_role";
GRANT ALL ON SEQUENCE "public"."Index_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Index_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Index_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."armies" TO "anon";
GRANT ALL ON TABLE "public"."armies" TO "authenticated";
GRANT ALL ON TABLE "public"."armies" TO "service_role";
GRANT ALL ON SEQUENCE "public"."army_lists_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."army_lists_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."army_lists_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."game_armies" TO "anon";
GRANT ALL ON TABLE "public"."game_armies" TO "authenticated";
GRANT ALL ON TABLE "public"."game_armies" TO "service_role";
GRANT ALL ON SEQUENCE "public"."game_armies_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."game_armies_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."game_armies_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."games" TO "anon";
GRANT ALL ON TABLE "public"."games" TO "authenticated";
GRANT ALL ON TABLE "public"."games" TO "service_role";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."games_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."unit_tiers" TO "anon";
GRANT ALL ON TABLE "public"."unit_tiers" TO "authenticated";
GRANT ALL ON TABLE "public"."unit_tiers" TO "service_role";
GRANT ALL ON SEQUENCE "public"."tiers_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."tiers_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."tiers_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."units" TO "anon";
GRANT ALL ON TABLE "public"."units" TO "authenticated";
GRANT ALL ON TABLE "public"."units" TO "service_role";
GRANT ALL ON SEQUENCE "public"."units_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."units_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."units_id_seq" TO "service_role";
GRANT ALL ON TABLE "public"."users" TO "anon";
GRANT ALL ON TABLE "public"."users" TO "authenticated";
GRANT ALL ON TABLE "public"."users" TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";
RESET ALL;
